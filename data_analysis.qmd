---
title: "Nutrition support practices- Data analysis"
author: "Eric Anku, Dr. Lamptey Samad, George Akafity, Sarah Amoo, Dr. Lauren Hill"
format: docx
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
```


```{r libraries}
pacman::p_load(
        rio, # Import dataset
        finalfit, # Labelling and data inspection
        gtsummary, # Summary tables
        tidyverse, # Data wrangling and visualisation
        janitor, # Data cleaning
        ggstatsplot, # Inferential plots
        here, # Working directory
        naniar, # Missing values
        skimr, # Skim daataset
        psych, # Describe dataset
        lessR, # Multiple plots and statistical tests
        forcats, # Working with factors
        ggthemes, # Themes
        questionr, # Multiple choice questions
        patchwork, # Combine plots
        ggpubr
)
```

```{r import-datasets}
# Full clean dataset
nss <- import(here("data","nss_merge_clean.RData"))

# Subset dataset
## Demographics
demographics <- import(here("data","demographics_merge.RData"))
en <- import(here("data","enteral_nutrition_merge.RData"))
mcqs <- import(here("data","mcqs_merge.RData"))
nutrition_assessment <- import(here("data","nutrition_assessment_merge.RData"))
ons <- import(here("data","oral_nutrition_supplement_merge.RData"))
pn <- import(here("data","parenteral_nutrition_merge.RData"))
skills <- import(here("data","skills_merge.RData"))
decision <- import(here("data","decision_merge.RData"))
```




****

## Summary tables for all respondents



```{r demographics}
demographics%>%
  select(-nutrition_support_team)%>%
        tbl_summary(
          missing_text ="No response",
          type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Characteristics of participants**")%>%
        bold_labels()
```


```{r nutrition-assessment, eval=FALSE}
t2 <- nutrition_assessment%>%
        select(-c(
                years_experience_factor,
                years_working_icu_factor,
                educ_level_nurses,
                profession_doctor_nurse
        ))%>%
        tbl_summary(
          missing_text = "No response",
          type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Nutrition screening and assessment**")%>%
        bold_labels()
```


```{r nutrition-decision, eval=FALSE}
t3 <- decision%>%
        select(-c(
                years_experience_factor,
                years_working_icu_factor,
                educ_level_nurses,
                profession_doctor_nurse
        ))%>%
        tbl_summary(
          missing_text = "No response",
          type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Nutrition support decision making**")%>%
        bold_labels()
```

```{r tbl-stack-one, eval=FALSE}
tbl_stack(list(t2, t3), group_header = c("Nutrition screening and assessment", "Nutrition support decision making"))
```


```{r enteral-nutrition, eval=FALSE}
t4 <- en%>%
        select(-c(
                years_experience_factor,
                years_working_icu_factor,
                educ_level_nurses,
                profession_doctor_nurse
        ))%>%
        tbl_summary(
          missing_text = "No response",
          type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Enteral nutrition support practices**")%>%
        bold_labels()
```

```{r oral-nutrition, eval=FALSE}
t5<- ons%>%select(-c(
                years_experience_factor,
                years_working_icu_factor,
                educ_level_nurses,
                profession_doctor_nurse
        ))%>%
        tbl_summary(
          missing_text = "No response",
          type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Oral nutrition support practices**")%>%
        bold_labels()
```


```{r pn, eval=FALSE}
t6 <- pn%>%select(-c(
                years_experience_factor,
                years_working_icu_factor,
                educ_level_nurses,
                profession_doctor_nurse
        ))%>%
        tbl_summary(
          missing_text = "No response",
          type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Parenteral nutrition support practices**")%>%
        bold_labels()
```

```{r tbl-stack-all-nsp, eval=FALSE}
tbl_stack(list(t4,t5, t6), group_header = c("Enteral nutrition support practices", "Oral nutrition supplement", "Parenteral nutrition support"))
```


```{r enteral-nutrition-table-only}
t4
```

```{r parenteral-nutrition-table-only}
t6
```

```{r skills-training, eval=FALSE}
t7 <- skills%>%
        select(-c(
                years_experience_factor,
                years_working_icu_factor,
                educ_level_nurses,
                profession_doctor_nurse,
                other_info
        ))%>%
        tbl_summary(
          missing_text = "No response",
          type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Skills and training**")%>%
        bold_labels()

t7
```


****

## Subcategory summary tables


### Professions analysis


```{r subgroup-nutrition-assessment}
t8 <- nutrition_assessment%>%
        select(-c(
                years_experience_factor,
                years_working_icu_factor,
                educ_level_nurses
        ))%>%
        tbl_summary(
                by = profession_doctor_nurse,
                missing_text = "No response",
                type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Nutrition screening and assessment by profession**")%>%
        bold_labels()%>%
        add_p()%>%
        bold_p()%>%add_overall()
```


```{r subgroup-decision}
t9 <- decision%>%
        select(-c(
                years_experience_factor,
                years_working_icu_factor,
                educ_level_nurses
        ))%>%
        tbl_summary(
                by = profession_doctor_nurse,
                missing_text = "No response",
                type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Nutrition support decision making by profession**")%>%
        bold_labels()%>%
        add_p()%>%
        bold_p()%>%add_overall()
```


```{r subgroup-enteral-nutrition}
t10 <- en%>%
        select(-c(
                years_experience_factor,
                years_working_icu_factor,
                educ_level_nurses
        ))%>%
        tbl_summary(
                by = profession_doctor_nurse,
                missing_text = "No response",
                type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Enteral nutrition support practices by profession**")%>%
        bold_labels()%>%
        add_p()%>%
        bold_p()%>%add_overall()

t10
```


```{r subgroup-ons}
t11 <- ons%>%
        select(-c(
                years_experience_factor,
                years_working_icu_factor,
                educ_level_nurses
        ))%>%
        tbl_summary(
                by = profession_doctor_nurse,
                missing_text = "No response",
                type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Oral nutrition support practices by profession**")%>%
        bold_labels()%>%
        add_p()%>%
        bold_p()%>%add_overall()

t11
```



```{r subgroup-pn}
t12 <- pn%>%
        select(-c(
                years_experience_factor,
                years_working_icu_factor,
                educ_level_nurses
        ))%>%
        tbl_summary(
                by = profession_doctor_nurse,
                missing_text = "No response",
                type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Parenteral nutrition support practices by profession**")%>%
        bold_labels()%>%
        add_p()%>%
        bold_p()%>%add_overall()

t12
```

```{r tbl-stack-nsp}
tbl_stack(list(t8,t9, t10, t11, t12), group_header = c("Nutrition assessment","Nutrition support decision making", "Enteral nutrition support practices", "Oral nutrition supplement practices", "Parenteral nutrition support practices"))
```



```{r subgroup-skills}
t13 <- skills%>%
        select(-c(
                years_experience_factor,
                years_working_icu_factor,
                educ_level_nurses,
                other_info
        ))%>%
        tbl_summary(
                by = profession_doctor_nurse,
                missing_text = "No response",
                type = all_dichotomous() ~ "categorical"
        )%>%
        modify_caption("**Skills and training by profession**")%>%
        bold_labels()%>%
        add_p()%>%
        bold_p()%>%add_overall()
t13
```


## Plots

```{r nutrition-asessment}
# Routine screening or nutrition assessment
plot_one <- ggplot(data = nutrition_assessment, aes(y = nutrition_assessment)) +
  geom_bar(position = "dodge", width = 0.5) +
  geom_text(stat='count', aes(label=..count..), nudge_y = 0.5) + # add frequency count annotation
  labs(title = "Routine practice of nutrition screening or assessment", x="Frequency", y="Screening or assessment") +
  scale_y_discrete(labels=c('No', 'Yes', 'No response')) +
  facet_wrap(~ profession_doctor_nurse) + 
  theme_bw(base_size = 12) + 
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        strip.background = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.text = element_text(size = 10),
        axis.title = element_text(size = 12, face = "bold"))

# Profession who performs the assessment
plot_two <- ggplot(data = nutrition_assessment, aes(y = profession_assessment), fill = profession_assessment) +
  geom_bar(position = "dodge", width = 0.5) +
  geom_text(stat='count', aes(label=..count..), nudge_y = 0.5) + # add frequency count annotation
  labs(title = "Professional who performs nutrition screening or assessment", x="Frequency", y="Profession") + 
  scale_y_discrete(labels=c('Dietitian', 'Medical doctor', 'Critical care nurse', 'No response')) +
  facet_wrap(~ profession_doctor_nurse) + 
  theme_bw(base_size = 12) + 
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        strip.background = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.text = element_text(size = 10),
        axis.title = element_text(size = 12, face = "bold"))

# Output plots
plot_one <- plot_one + theme_pubr() 
plot_two <- plot_two + theme_pubr()

full_plot <- plot_one / plot_two
full_plot

# Save plot
ggsave("screening_plot.pdf", full_plot, width = 10, height = 5, dpi = 600)
```


```{r nutrition-decision-making}
# Create plots
plot_three <- ggplot(data = decision, aes(nutrition_protocol)) +
  geom_bar(position = "dodge", width = 0.5) +
  labs(title = "Formal nutrition protocol", x="Nutrition protocol", y="Frequency") +
  theme_ggstatsplot() +
  geom_text(stat='count', aes(label=..count..), nudge_y = 0.8) + # add frequency count annotation
  facet_wrap(~ profession_doctor_nurse) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

plot_four <- ggplot(data = decision, aes(fluid_volume_decision)) +
  geom_bar(position = "dodge", width = 0.5) +
  labs(title = "Determination of fluid volume", x="Profession", y="Frequency") +
  theme_ggstatsplot() +
  geom_text(stat='count', aes(label=..count..), nudge_y = 0.8) + # add frequency count annotation
  facet_wrap(~ profession_doctor_nurse) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

plot_five <- ggplot(data = decision, aes(decide_route)) +
  geom_bar(position = "dodge", width = 0.5) +
  geom_text(stat='count', aes(label=..count..), nudge_y = 0.8) + # add frequency count annotation
  labs(title = "Route of nutrition support", x="Decision about route", y="Frequency") +
  theme_ggstatsplot() +
  facet_wrap(~ profession_doctor_nurse) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

plot_six <- ggplot(data = decision, aes(nutrition_support_team)) +
  geom_bar(position = "dodge", width = 0.5) +
  labs(title = "Formal nutrition support team", x="Response", y="Frequency") +
  theme_ggstatsplot() +
  geom_text(stat='count', aes(label=..count..), nudge_y = 0.8) + # add frequency count annotation
  facet_wrap(~ profession_doctor_nurse) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


# Flip plots to horizontal
plot_three <- plot_three + coord_flip() + theme_pubr()
plot_four <- plot_four + coord_flip() + theme_pubr()
plot_five <- plot_five + coord_flip() + theme_pubr()
plot_six <- plot_six + coord_flip() + theme_pubr()

# Combine plots and set layout
combined_plots <- ggarrange(plot_three, plot_four, plot_five, plot_six, ncol = 2, nrow = 2, labels = c("A", "B", "C", "D"), common.legend = TRUE, legend = "bottom")

# Add a caption
caption <- "Fig 2A. Presence of nutrition protocol; Fig 2B. Determination of fluid volume; Fig 2C. Decision about route of nutrition support; Fig 2D. Presence of formal nutrition support team"

# Add border and customize
final_plot <- ggplot2::ggplot() +
              ggplot2::annotation_custom(grob = ggplot2::ggplotGrob(combined_plots), xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
              ggplot2::coord_cartesian(xlim = c(0, 1), ylim = c(0, 1)) +
              ggplot2::labs(caption = caption) +
              ggplot2::theme_void() +
              ggplot2::theme(plot.margin = grid::unit(c(1, 1, 1, 1), "cm"))

# Output the final plot
final_plot

# Save plot
ggsave("decision_plot.pdf", final_plot, width = 18, height = 10, dpi = 600)
```


```{r plot-competence, eval=FALSE}
ggplot(data = skills, aes(competence)) +
  geom_bar() +
  labs(title = "Self-reported competence of professionals", x="Self-reported competence", y="Frequency") +  scale_x_discrete(labels=c('Satisfactory/Average', 'Above-average', 'Below average', 'Totally unskilled')) + theme_ggstatsplot() +
  facet_wrap(~ profession_doctor_nurse) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r plot-source-info, eval=FALSE}
ggplot(data = skills, aes(source_info)) +
  geom_bar() +
  labs(title = "Main source of nutrition support information", x="Source of nutrition support information", y="Frequency") + facet_wrap(~profession_doctor_nurse) + scale_x_discrete(labels=c('Feeding protocol', 'In-service training', 'Colleagues', 'Journal articles', 'Workshop/Conference', 'Others')) + theme_ggstatsplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


## Multiple choice questions


```{r mcq-nutrition-tools}
# Split column into multiple rows
nutrition_tools_frequency <- tools_split %>% 
  group_by(nutrition_tools) %>%
  summarise(n = n ()) %>%
  ungroup()

# Create bar chart using ggplot2
p1 <- ggplot(nutrition_tools_frequency, aes(y = nutrition_tools, x = n)) +
  geom_bar(stat = "identity", fill = "#0072B2") +
  labs(y = "Nutrition screening or assessment tools", x = "Frequency", 
       title = "Nutrition screening or assessment methods used in the ICU") +
  geom_text(aes(label = n), nudge_x = 0.7, size = 4) +
  scale_y_discrete(labels=c( "BMI/Body weight assessment", "ABCDE approach", "Don't know",'MUST', 'NUTRIC', 'NRS2002', 'SGA')) +
  theme_bw(base_size = 12) +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.line = element_line(color = "#0072B2"),
        axis.text = element_text(color = "black", size = 11),
        axis.title = element_text(color = "black", size = 12, face = "bold"),
        plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, size = 12),
        plot.caption = element_text(hjust = 1, size = 10, color = "gray50"))

# Customize the legend
legend_title <- "Frequency"
legend_labels <- c("Nutrition screening or assessment tools")
p1 <- p1 + theme(legend.position = "bottom",
                  legend.text = element_text(size = 11),
                  legend.title = element_text(size = 12, face = "bold"),
                  legend.key.size = unit(1.5, "lines")) +
  scale_fill_manual(values = "black",
                    name = legend_title,
                    labels = legend_labels)

p1

# Save plot
ggsave("nutrition_tools_plot.pdf", p1, width = 10, height = 5, dpi = 600)
```


```{r mcq-nutrition-requirements}
# Data split
req_split <- nss %>%
  separate_rows(nutrition_requirement, sep = ";")

# Split column into multiple rows
nutrition_req_frequency <- req_split %>% 
  group_by(nutrition_requirement) %>%
  summarise(n = n ()) %>%
  ungroup()

# Create bar chart using ggplot2
p2 <- ggplot(nutrition_req_frequency, aes( x = nutrition_requirement, y = n)) +
  geom_bar(stat = "identity") +
  labs (x = "Methods for estimating nutrition requirement", y = "Frequency", title = "Usual method for estimating nutrition requirement in the ICU")

p2 + coord_flip()
```


```{r}
# Data split
req_split <- nss %>%
  separate_rows(nutrition_requirement, sep = ";")

# Split column into multiple rows
nutrition_req_frequency <- req_split %>% 
  group_by(nutrition_requirement) %>%
  summarise(n = n ()) %>%
  ungroup()

# Create bar chart using ggplot2
p2 <- ggplot(nutrition_req_frequency, aes(y = nutrition_requirement, x = n)) +
  geom_bar(stat = "identity", fill = "#0072B2", color = "#0072B2", width = 0.6) +
  geom_text(aes(label = n), nudge_x = 0.5, size = 4) +
  labs (y = "Methods for estimating nutrition requirement", x = "Frequency", title = "Usual method for estimating nutrition requirement in the ICU") + 
   scale_y_discrete(labels=c( 'Body weight-based methods', 'Clinical judgement', "Don't know",  'Published guidelines', "Predictive equations", "Illness severity", "Indirect calorimetry" )) +
  theme_pubclean() +  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.line = element_line(color = "#0072B2"),
        axis.text = element_text(color = "black", size = 11),
        axis.title = element_text(color = "black", size = 12, face = "bold"),
        plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, size = 12),
        plot.caption = element_text(hjust = 1, size = 10, color = "gray50"))

p2 

# Save plot
ggsave("nutrition_requirements_plot.pdf", p2, width = 10, height = 5, dpi = 600)
```


```{r mcq-en}
# Data split
commence_en_split <- nss %>%
  separate_rows(commence_en, sep = ";")

basis_en_split <- nss %>%
  separate_rows(basis_en, sep = ";")

feed_tolerance_split <- nss %>%
  separate_rows(feed_tolerance_en, sep = ";")

monitoring_en_split <- nss %>%
  separate_rows(methods_monitoring_en, sep = ";")


# Split column into multiple rows
commence_en_frequency <- commence_en_split %>% 
  group_by(commence_en) %>%
  summarise(n = n ()) %>%
  ungroup()

basis_en_frequency <- basis_en_split %>% 
  group_by(basis_en) %>%
  summarise(n = n ()) %>%
  ungroup()

monitoring_en_frequency <- monitoring_en_split %>% 
  group_by(methods_monitoring_en) %>%
  summarise(n = n ()) %>%
  ungroup()

feed_tolerance_frequency <- feed_tolerance_split %>% 
  group_by(feed_tolerance_en) %>%
  summarise(n = n ()) %>%
  ungroup()

# Create bar chart using ggplot2
p3 <- ggplot(commence_en_frequency, aes( x = commence_en, y = n)) +
  geom_bar(stat = "identity") +
  labs (x = "Criteria to commence EN", y = "Frequency", title = "Criteria to commence EN in the ICU")

p4 <- ggplot(basis_en_frequency, aes( x = basis_en, y = n)) +
  geom_bar(stat = "identity") +
  labs (x = "Basis for EN decision", y = "Frequency", title = "Basis for EN decision")

p5 <- ggplot(monitoring_en_frequency, aes( x = methods_monitoring_en, y = n)) +
  geom_bar(stat = "identity") +
  labs (x = "Monitoring EN", y = "Frequency", title = "Methods for monitoring EN")

p6 <- ggplot(feed_tolerance_frequency, aes( x = feed_tolerance_en, y = n)) +
  geom_bar(stat = "identity") +
  labs (x = "Methods for feed tolerance", y = "Frequency", title = "Methods for monitoring feed tolerance in the ICU")


# Horizontal bar charts

p3 <- p3 + coord_flip()
p4 <- p4 + coord_flip()
p5 <- p5 + coord_flip()
p6 <- p6 + coord_flip()


# Combine charts

p3 / p4 / p5 / p6
```


```{r mcq-pn}
# Data split
commence_pn_split <- nss %>%
  separate_rows(commence_pn, sep = ";")

timing_pn_split <- nss %>%
  separate_rows(timing_pn, sep = ";")

mpn_split <- nss %>%
  separate_rows(monitoring_pn, sep = ";")

# Split column into multiple rows
commence_pn_frequency <- commence_pn_split %>% 
  group_by(commence_pn) %>%
  summarise(n = n ()) %>%
  ungroup()

timing_pn_frequency <- timing_pn_split %>% 
  group_by(timing_pn) %>%
  summarise(n = n ()) %>%
  ungroup()

monitoring_pn_frequency <- mpn_split %>% 
  group_by(monitoring_pn) %>%
  summarise(n = n ()) %>%
  ungroup()

# Create bar chart using ggplot2
p7 <- ggplot(commence_pn_frequency, aes( x = commence_pn, y = n)) +
  geom_bar(stat = "identity") +
  labs (x = "Commence pn", y = "Frequency", title = "Criteria to commence pn")

p8 <- ggplot(timing_pn_frequency, aes( x = timing_pn, y = n)) +
  geom_bar(stat = "identity") +
  labs (x = "Timing pn", y = "Frequency", title = "Timing of PN")

p9 <- ggplot(monitoring_pn_frequency, aes( x = monitoring_pn, y = n)) +
  geom_bar(stat = "identity") +
  labs (x = "Monitoring pn", y = "Frequency", title = "Methods for monitoring PN")


# Horizontal bar charts
p7 <- p7 + coord_flip()
p8 <- p8 + coord_flip()
p9 <- p9 + coord_flip()

# Combine bar charts

p7 / p8 / p9
```

